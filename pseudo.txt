Mulai Wordle Numerik:
1. Tentukan PANJANG_ANGKA = 6.
2. Generate ANGKA_TARGET secara acak dengan PANJANG_ANGKA.
3. Inisialisasi MAKS_TEBAKAN = 6.
4. Set jumlah_tebakan = 0.
5. Set game_berjalan = True.

Loop selama game_berjalan:
    a. Jika jumlah_tebakan >= MAKS_TEBAKAN:
        - Tampilkan pesan "Game Over! Angka yang benar adalah ANGKA_TARGET".
        - Akhiri game.

    b. Ambil INPUT_ANGKA dari pemain.
    c. Validasi INPUT_ANGKA:
        - Jika panjang(INPUT_ANGKA) != PANJANG_ANGKA atau INPUT_ANGKA bukan angka:
            - Tampilkan pesan error: "Masukkan angka 6-digit yang valid!".
            - Lanjutkan ke iterasi berikutnya (abaikan input ini).

    d. Proses Feedback:
        - Bandingkan setiap digit di INPUT_ANGKA dengan ANGKA_TARGET.
        - Tentukan feedback untuk setiap digit:
            - "Green" jika digit benar dan posisi benar.
            - "Yellow" jika digit benar tetapi posisi salah.
            - "Grey" jika digit tidak ada di ANGKA_TARGET.

    e. Tampilkan feedback ke pemain:
        - Untuk setiap digit di INPUT_ANGKA, tampilkan kotak dengan warna sesuai feedback.

    f. Jika INPUT_ANGKA == ANGKA_TARGET:
        - Tampilkan pesan "Selamat, Anda Menang!".
        - Akhiri game.

    g. jumlah_tebakan += 1.

Fungsi Reset Game:
1. Generate ANGKA_TARGET baru secara acak.
2. Set jumlah_tebakan = 0.
3. Kosongkan semua feedback yang ditampilkan.
4. Aktifkan tombol submit jika dinonaktifkan.
5. Tampilkan pesan status game kosong.

==============================================================================================
Fungsi generate_target(PANJANG_ANGKA):
    angka_target = ""
    Ulangi PANJANG_ANGKA kali:
        Tambahkan digit acak (0-9) ke angka_target
    Kembalikan angka_target
==============================================================================================
Fungsi generate_feedback(ANGKA_TARGET, INPUT_ANGKA):
    hasil = array kosok
    status_target = array boolean (default: False, panjang: PANJANG_ANGKA)

    # Loop pertama: Periksa Green
    Untuk setiap index i dari 0 ke PANJANG_ANGKA - 1:
        Jika INPUT_ANGKA[i] == ANGKA_TARGET[i]:
            Tambahkan "Green" ke hasil
            status_target[i] = True
        Lain:
            Tambahkan "" ke hasil

    # Loop kedua: Periksa Yellow
    Untuk setiap index i dari 0 ke PANJANG_ANGKA - 1:
        Jika hasil[i] == "":
            Untuk setiap index j dari 0 ke PANJANG_ANGKA - 1:
                Jika INPUT_ANGKA[i] == ANGKA_TARGET[j] dan status_target[j] == False:
                    Tambahkan "Yellow" ke hasil[i]
                    status_target[j] = True
                    Hentikan loop
            Jika tidak ditemukan, set hasil[i] = "Grey"
    Kembalikan hasil
==============================================================================================
Fungsi validasi_input(INPUT_ANGKA, PANJANG_ANGKA):
    Jika panjang(INPUT_ANGKA) != PANJANG_ANGKA:
        Kembalikan "Error: Panjang angka tidak sesuai."
    Jika INPUT_ANGKA mengandung karakter non-digit:
        Kembalikan "Error: Input hanya boleh berupa digit (0-9)."
    Kembalikan "Valid"
==============================================================================================
Fungsi reset_game():
    ANGKA_TARGET = generate_target(PANJANG_ANGKA)
    jumlah_tebakan = 0
    Kosongkan semua feedback yang ditampilkan
    Aktifkan tombol submit
    Tampilkan pesan status game kosong
==============================================================================================